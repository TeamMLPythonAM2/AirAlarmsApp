.content{
    padding: 35px 20px 0 20px;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: flex-start;
    min-height: calc(100vh - 106px);
    height: 100%;
}

.content:has(.grid){
    flex-direction: row;
    justify-content: center;
    width: 100%;
    align-items: flex-start;
}

.content > *{
    animation: appear .5s ease-in-out forwards;
}

.content h1{
    background: linear-gradient(180deg, #D8BFFF 20%, #EE8E9B 70%);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0), 0 0 10px rgba(204, 204, 204, 0.54);
    font-family: "Aldrich", sans-serif;
    font-weight: 400;
    font-size: 4rem;
    margin-bottom: 10px;
    line-height: 100%;
    cursor: default;
    text-align: center;
    user-select: none;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.align-left{
    align-self: flex-start;
}

.grid{
    display: grid;
    width: 100%;
    grid-template-columns: 1fr 1fr;
    transition: all .3s ease-in-out;
    justify-items: center;
    height: 100%;
    h1{
        text-align: left;
    }

    .predictions-table{
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }

    .prediction-result{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
        img{
            width: 100%;
            max-height: 600px;
              animation: fluidMotion 3s infinite ease-in-out;
        }
    }
    @media screen and (max-width: 740px) {
        grid-template-columns: 1fr;
        h1{
            text-align: center;
        }
        .predictions-table{
            flex-direction: column-reverse;
        }
        :last-child{
            order: -1;
        }
    }
}

@keyframes fluidMotion {
  0% {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    filter: hue-rotate(0deg);
  }
  50% {
    transform: perspective(1000px) rotateX(3deg) rotateY(3deg);
    filter: hue-rotate(10deg);
  }
  100% {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    filter: hue-rotate(0deg);
  }
}


